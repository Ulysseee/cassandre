* {
  outline: none;
  box-sizing: border-box;
  -webkit-overflow-scrolling: touch;
}

*, *:before, *:after {
  box-sizing: border-box;
}

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  vertical-align: baseline;
}

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

main {
  display: block;
}

ol, ul, li {
  list-style: none;
}

a {
  color: inherit;
  text-decoration: none;
  cursor: pointer;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

hr {
  border: none;
}

img {
  display: block;
}

button {
  border: none;
  margin: 0;
  padding: 0;
  width: auto;
  overflow: visible;
  background: none;
  cursor: pointer;
}

input {
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
}

select {
  margin: 0;
  -webkit-margin: 0;
  border-radius: 0;
  -webkit-border-radius: 0;
  appearance: none;
  -moz-appearance: none;
  -webkit-appearance: none;
  cursor: pointer;
}

textarea {
  resize: none;
  -webkit-appearance: none;
}

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

strong {
  font-weight: bolder;
}

img {
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
  user-drag: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -o-user-select: none;
  user-select: none;
}

.section-work__cover picture, .component-parallax-container picture,
.section-work__cover img,
.component-parallax-container img,
.section-work__cover video,
.component-parallax-container video {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: inherit;
}

.is-hidden.component-preloader {
  display: none;
  visibility: hidden;
  opacity: 0;
}

:root {
  --vw: 1vw;
  --vh: 1vh;
  --section-padding: clamp(5em, calc(21 * var(--vh)), 12em);
  --container-padding: clamp(2.5em, calc(8 * var(--vw)), 8em);
}

@media screen and (max-width: 1200px) {
  :root {
    --container-padding: 6vw;
    --section-padding: clamp(5em, calc(21 * var(--vh)), 7em);
  }
}
@media screen and (max-width: 720px) {
  :root {
    --section-padding: max(2.5em, calc(12 * var(--vh)));
  }
}
@media screen and (max-width: 540px) {
  :root {
    --container-padding: clamp(1em, 4vw, 2.5em);
  }
}
/*
100 thin
200 extralight
300 light
400 normal
500 medium
600 semibold
700 bold
800 extrabold
900 black
*/
@font-face {
  font-family: "Neue Regular";
  src: url(neue-regular.woff2) format("woff2"), url(neue-regular.woff) format("woff"), url(neue-regular.ttf) format("tff"), url(neue-regular.eot) format("eot");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Neue Thin";
  src: url(neue-thin.woff2) format("woff2"), url(neue-thin.woff) format("woff"), url(neue-thin.ttf) format("tff"), url(neue-thin.eot) format("eot");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Rebond Extralight";
  src: url(rebond-extralight.woff2) format("woff2"), url(rebond-extralight.woff) format("woff"), url(rebond-extralight.ttf) format("tff"), url(rebond-extralight.eot) format("eot");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Rebond Regular";
  src: url(rebond-regular.woff2) format("woff2"), url(rebond-regular.woff) format("woff"), url(rebond-regular.ttf) format("tff"), url(rebond-regular.eot) format("eot");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "VTC Carrie";
  src: url(VTCCarrie-Regular.woff2) format("woff2"), url(VTCCarrie-Regular.woff) format("woff"), url(VTCCarrie-Regular.eot) format("eot");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
html {
  position: relative;
  width: 100%;
  min-height: 100%;
  scroll-behavior: initial;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

body {
  position: relative;
  width: 100%;
  min-height: 100%;
  pointer-events: auto;
  -webkit-overflow-scrolling: touch;
  -webkit-font-smoothing: antialiased;
}

.app {
  --release: "17-09-2023";
  width: calc(100 * var(--vw));
  min-height: calc(100 * var(--vh));
  font-family: "Neue Regular";
  font-size: 16px;
  font-size: clamp(16px, 1.2 * var(--vw), 19px);
  line-height: 1;
  background-color: #fefcfa;
  color: #1c1b1a;
  overflow-x: clip;
}
.app.is-dark-beige {
  background: #ede9e3;
}
.app::before {
  content: "xs";
  position: absolute;
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
}
@media screen and (min-width: 540px) {
  .app::before {
    content: "s";
  }
}
@media screen and (min-width: 720px) {
  .app::before {
    content: "m";
  }
}
@media screen and (min-width: 1200px) {
  .app::before {
    content: "l";
  }
}

.appOverlay {
  top: 0;
  left: 0;
  width: calc(100 * var(--vw));
  height: calc(100 * var(--vh));
  background-color: #fefcfa;
  position: absolute;
  z-index: 6;
}

.page {
  width: 100%;
  height: 100%;
  min-height: calc(100 * var(--vh));
  padding-top: 110px;
}
@media screen and (max-width: 540px) {
  .page {
    padding-top: 80px;
  }
}
.page-home {
  padding-top: 0;
}

* {
  font-kerning: none;
}

.line {
  overflow: hidden;
}

.word {
  display: inline-flex !important;
  overflow: hidden;
}

.letter {
  display: inline-block !important;
}

html.lenis,
html.lenis body {
  height: auto;
}

.lenis.lenis-smooth {
  scroll-behavior: auto !important;
}

.lenis.lenis-smooth [data-lenis-prevent] {
  overscroll-behavior: contain;
}

.lenis.lenis-stopped {
  overflow: hidden;
}

.lenis.lenis-smooth iframe {
  pointer-events: none;
}

iframe {
  scroll-behavior: auto !important;
}

.ui-container, .component-footer-wrapper, .page-projects-header {
  margin: 0 auto;
  padding-left: var(--container-padding);
  padding-right: var(--container-padding);
}
.ui-container-large {
  padding-left: calc(var(--container-padding) * 0.35);
  padding-right: calc(var(--container-padding) * 0.35);
}
@media screen and (max-width: 1200px) {
  .ui-container, .component-footer-wrapper, .page-projects-header, .ui-container-large {
    padding-left: var(--container-padding);
    padding-right: var(--container-padding);
  }
}

.ui-h1 {
  font-family: "VTC Carrie";
  font-size: clamp(4.125rem, 24 * var(--vw), 24 * var(--vw));
  line-height: 0.9;
}

.ui-h2 {
  font-family: "Rebond Regular";
  font-size: clamp(3.5rem, 7 * var(--vw), 8.75rem);
  line-height: 1.2;
  letter-spacing: -4px;
}

.ui-h3 {
  font-family: "Rebond Regular";
  font-size: clamp(3rem, 6 * var(--vw), 5rem);
  line-height: 1;
  letter-spacing: -3px;
}

.ui-h4 {
  font-family: "Rebond Regular";
  font-size: clamp(3rem, 5 * var(--vw), 4.5rem);
  line-height: 0.93;
  letter-spacing: -2px;
}
@media screen and (max-width: 720px) {
  .ui-h4 {
    font-size: calc(clamp(3.25em, 7 * var(--vw), 8em) * 0.92);
  }
}

.ui-h5 {
  font-family: "Rebond Regular";
  font-size: min(64px, max(40px, calc(10.2564102564 * var(--vw))));
  line-height: 1;
  letter-spacing: -2px;
}
@media screen and (max-width: 720px) {
  .ui-h5 {
    line-height: 3rem;
  }
}

.ui-h6 {
  font-family: "Rebond Regular";
  font-size: clamp(2rem, 3 * var(--vw), 2.5rem);
  line-height: 1.2;
  letter-spacing: -1px;
}

.ui-h7 {
  font-family: "Rebond Regular";
  font-size: min(40px, max(22px, calc(5.641025641 * var(--vw))));
  line-height: 1.05;
  letter-spacing: -2px;
}
@media (max-width: 720px) {
  .ui-h7 {
    font-size: min(40px, max(22px, calc(3.3333333333 * var(--vw))));
    line-height: 0.95;
  }
}

.ui-h8 {
  font-family: "Rebond Regular";
  font-size: clamp(1.1rem, 8 * var(--vw), 2rem);
  line-height: 1;
}

.ui-h9, .page-ui-sectionTitle {
  font-family: "Rebond Regular";
  font-size: clamp(1rem, 1.4 * var(--vw), 1.5rem);
  line-height: 1;
  letter-spacing: -1px;
}

.ui-p-xl {
  font-size: clamp(1rem, 1.7 * var(--vw), 1.125rem);
  line-height: 1;
}

.ui-p-l {
  font-size: clamp(1rem, 1.7 * var(--vw), 1.125rem);
  line-height: 1.4;
}
@media screen and (max-width: 720px) {
  .ui-p-l {
    line-height: 1.6;
  }
}

.ui-p-m {
  font-size: calc(clamp(5.5em, 7 * var(--vw), 8em) * 0.159);
  line-height: 1.67;
}
@media screen and (max-width: 720px) {
  .ui-p-m {
    font-size: calc(clamp(6.3em, 7 * var(--vw), 8em) * 0.159);
  }
}

.ui-p-s {
  font-size: 0.75rem;
  line-height: 1.4;
}

.ui-p-xs {
  font-size: 12px;
  line-height: 1.22;
}

.ui-p-xxs {
  font-size: 12px;
  line-height: 1.43;
}

.ui-spotLink {
  display: inline-flex;
  gap: 4px;
  justify-content: center;
  align-items: center;
  white-space: pre;
  cursor: pointer;
  position: relative;
  z-index: 1;
}
@media (any-hover: hover) {
  .ui-spotLink:not([disabled]):hover::before {
    transform: scale(1);
  }
}
.ui-spotLink::before {
  content: "";
  position: absolute;
  width: 96px;
  height: 96px;
  background: url(spot-brown.png) no-repeat;
  background-size: contain;
  transform: scale(0);
  transition: transform 0.65s cubic-bezier(0.34, 1.56, 0.64, 1);
  z-index: -1;
}
.ui-spotLink-text {
  margin-top: 3px;
  line-height: 1;
}
.ui-spotLink-icon {
  display: none;
  transform: rotate(-45deg);
}
@media screen and (max-width: 1200px) {
  .ui-spotLink-icon {
    display: inline;
  }
}

.ui-underlineLink {
  position: relative;
  padding-bottom: 0.375rem;
  white-space: pre;
  cursor: pointer;
}
.ui-underlineLink:hover::before {
  transform: scaleX(1);
}
.ui-underlineLink:hover::after {
  transform: scaleX(0);
}
.ui-underlineLink::before, .ui-underlineLink::after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 1px;
  background-color: #1c1b1a;
  transition: 0.8s;
  transition-timing-function: cubic-bezier(0, 0.89, 0.41, 1);
}
.ui-underlineLink::before {
  left: 0;
  transform-origin: left;
  transform: scaleX(0);
  transition-delay: 0.2s;
}
.ui-underlineLink::after {
  right: 0;
  transform-origin: right;
}

.ui-cursorTextLink {
  cursor: pointer;
  position: relative;
  z-index: 1;
}

.ui-wordMask {
  position: relative;
  overflow: hidden;
}
.ui-wordMask > span {
  display: block;
}

.ui-hyperlink {
  text-decoration: underline;
  text-decoration-thickness: 1px;
  text-underline-offset: 0.4rem;
}

.ui-spacer {
  width: 4rem;
}

.page-about {
  position: relative;
  overflow: hidden;
}
@media screen and (max-width: 720px) {
  .page-about {
    display: flex;
    flex-direction: column;
  }
}
.page-about-content {
  padding-top: 8rem;
}
@media screen and (max-width: 720px) {
  .page-about-content {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
  }
}
.page-about-title {
  max-width: 1360px;
  position: relative;
  font-family: "VTC Carrie";
  text-transform: uppercase;
  color: #ffffff;
  text-align: center;
  font-size: clamp(3.5rem, 8.8 * var(--vw), 8.75rem);
  line-height: clamp(3.5rem, 7.3 * var(--vw), 8.75rem);
  margin: 0 auto;
}
@media screen and (max-width: 540px) {
  .page-about-title {
    max-width: 100%;
    font-size: clamp(2.125rem, 12 * var(--vw), 3.125rem);
    line-height: clamp(2.125rem, 10 * var(--vw), 3.125rem);
  }
}
.page-about-scribble {
  width: fit-content;
  height: fit-content;
  display: inline-block;
}
@media screen and (max-width: 540px) {
  .page-about-scribble {
    width: 2.375rem;
    height: 2.375rem;
  }
  .page-about-scribble svg {
    width: 100%;
    height: 100%;
  }
}
.page-about-loop {
  display: inline-flex !important;
  position: relative;
  color: #ffffff;
  overflow: hidden;
  min-width: clamp(7rem, 17 * var(--vw), 18.75rem);
}
.page-about-loop-word {
  width: fit-content;
  height: fit-content;
  margin: auto;
  position: relative;
  display: flex !important;
  justify-content: center;
}
.page-about-loop-inner {
  font-size: clamp(1rem, 4 * var(--vw), 2rem);
  line-height: clamp(1rem, 4 * var(--vw), 2rem);
  font-family: "Rebond Regular";
  text-transform: lowercase;
  letter-spacing: -2px;
}
@media screen and (max-width: 540px) {
  .page-about-loop-inner {
    letter-spacing: -0.625px;
  }
}
.page-about-loop-carret {
  position: absolute;
  top: 0;
  right: -4px;
  width: 2px;
  height: 100%;
  background-color: #fefcfa;
  animation: flash 0.75s infinite reverse;
}
.page-about-loop-carret--is-off {
  display: none;
}
.page-about-loop-carret--is-on {
  display: block;
}
.page-about-loop-parenthesis {
  font-family: "Rebond Regular";
}
.page-about-scribble .component-svgReveal {
  position: absolute;
  top: 0;
  left: 0;
}
@media screen and (max-width: 720px) {
  .page-about-scribble .component-svgReveal {
    width: 120px;
  }
}
.page-about-wrapper {
  display: flex;
  justify-content: space-between;
  margin-top: calc(2.2 * var(--vw));
  margin-bottom: calc(8 * var(--vw));
}
@media screen and (max-width: 540px) {
  .page-about-wrapper {
    flex-direction: column;
    align-items: center;
    padding-right: 0;
    margin-top: 2rem;
    margin-bottom: 7.25rem;
  }
}
.page-about-wrapper-image {
  width: clamp(27.25rem, 15.2 * var(--vw), 22.22 * var(--vw));
}
@media screen and (max-width: 720px) {
  .page-about-wrapper-image {
    width: clamp(20.25rem, 29 * var(--vw), 33 * var(--vw));
  }
}
.page-about-wrapper-image-inner {
  transform: rotate(-1.25deg);
  position: relative;
}
.page-about-wrapper-image-inner-scotch {
  position: absolute;
  top: -57px;
  left: 0;
  right: 0;
  margin: 0 auto;
  width: calc(14 * var(--vw));
  height: auto;
  z-index: 1;
}
@media screen and (max-width: 540px) {
  .page-about-wrapper-image-inner-scotch {
    width: calc(38 * var(--vw));
    top: -10%;
  }
}
.page-about-wrapper-image-inner img {
  width: 100%;
  height: auto;
}
.page-about-wrapper-image-text {
  font-family: "Rebond Regular";
  color: rgba(28, 27, 26, 0.3019607843);
  font-size: 0.875rem;
  line-height: 1.5rem;
  margin-top: 0.75rem;
}
@media screen and (max-width: 540px) {
  .page-about-wrapper-image-text {
    display: none;
  }
}
.page-about-wrapper-text {
  font-family: "Rebond Regular";
  padding-top: calc(3 * var(--vw));
  width: clamp(34.563rem, 29 * var(--vw), 33 * var(--vw));
  padding-right: calc(14 * var(--vw));
}
@media screen and (max-width: 540px) {
  .page-about-wrapper-text {
    width: 100%;
    padding-top: 2.5rem;
  }
}
.page-about-wrapper-text-skills {
  display: flex;
  flex-direction: row;
  gap: 0.375rem;
  font-size: 1rem;
}
@media screen and (max-width: 540px) {
  .page-about-wrapper-text-skills {
    font-size: 0.875rem;
  }
}
.page-about-wrapper-text-activities {
  font-size: 1.25rem;
  line-height: 1.2;
  width: clamp(19.75rem, 11.1 * var(--vw), 15.5 * var(--vw));
  margin-top: 1rem;
}
@media screen and (max-width: 540px) {
  .page-about-wrapper-text-activities {
    font-size: 1.125rem;
  }
}
.page-about-wrapper-text-carreer {
  margin-top: calc(5 * var(--vw));
  font-size: calc(clamp(5.5em, 7 * var(--vw), 8em) * 0.159);
}
@media screen and (max-width: 540px) {
  .page-about-wrapper-text-carreer {
    margin-top: 3.5rem;
  }
}
.page-about-wrapper-text-carreer-title {
  font-size: 1rem;
  margin-bottom: 1rem;
}
@media screen and (max-width: 540px) {
  .page-about-wrapper-text-carreer-title {
    font-size: 0.875rem;
  }
}
.page-about-wrapper-text-carreer-list {
  min-width: calc(20 * var(--vw));
}
.page-about-wrapper-text-carreer-list-item {
  display: flex;
  cursor: pointer;
  color: #1c1b1a;
  transition: color 1s cubic-bezier(0.11, 0.9, 0.09, 1);
  font-size: 1.25rem;
}
@media screen and (max-width: 540px) {
  .page-about-wrapper-text-carreer-list-item {
    font-size: 1.125rem;
  }
}
.page-about-wrapper-text-carreer-list-item:not(:last-child) {
  margin-bottom: 0.625rem;
}
@media screen and (max-width: 540px) {
  .page-about-wrapper-text-carreer-list-item:not(:last-child) {
    margin-bottom: 0.375rem;
  }
}
.page-about-wrapper-text-carreer-list-item a {
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: 100%;
}
.page-about-wrapper-text-carreer-list-item .line {
  display: inline-flex !important;
}
.page-about-wrapper-text-carreer-list-item .line .word:not(:first-child) {
  margin-left: 0.35rem;
}
.page-about-wrapper-text-carreer-list-item-arrow {
  color: #1c1b1a;
  transform: rotate(-45deg);
  transition: all 0.8s cubic-bezier(0.11, 0.9, 0.09, 1);
}
.page-about-wrapper-text-carreer-list-item-name {
  margin-left: 1rem;
}
.page-about-wrapper-text-carreer-list-item-date {
  margin-left: auto;
}
.page-about-wrapper-text-carreer-list-item-date .word:nth-child(2) {
  margin-left: 2rem !important;
}
@media screen and (max-width: 540px) {
  .page-about-wrapper-text-carreer-list-item-date .word:nth-child(2) {
    margin-left: 1.5rem !important;
  }
}
.page-about-wrapper-text-carreer-list-item-date .word:nth-child(3) {
  margin-left: 0.5rem !important;
}
@media (any-hover: hover) {
  .page-about-wrapper-text-carreer-list-item:not([disabled]):hover {
    color: #ff6c3c;
  }
  .page-about-wrapper-text-carreer-list-item:not([disabled]):hover .page-about-wrapper-text-carreer-list-item-arrow {
    color: #ff6c3c;
    transform: rotate(0);
  }
}
.page-about-client {
  margin-left: auto;
  width: clamp(34.563rem, 29 * var(--vw), 33 * var(--vw));
  font-family: "Rebond Regular";
  margin-bottom: 4rem;
}
@media screen and (max-width: 540px) {
  .page-about-client {
    font-size: 3rem;
  }
}
.page-about-client-surtitle {
  font-size: 1rem;
  line-height: 1.2;
  margin-bottom: 1rem;
}
@media screen and (max-width: 540px) {
  .page-about-client-surtitle {
    font-size: 0.875rem;
  }
}
.page-about-client-list {
  font-size: 1.25rem;
}
@media screen and (max-width: 540px) {
  .page-about-client-list {
    font-size: 1.125rem;
    line-height: 1.5rem;
  }
}
@media screen and (max-width: 540px) {
  .page-about-client {
    width: 100%;
  }
}
.page-about-push {
  width: 100%;
  position: relative;
  color: #ffffff;
  overflow: hidden;
}
@media screen and (max-width: 540px) {
  .page-about-push {
    height: 17.875rem;
    margin-top: 3rem;
  }
}
.page-about-push-content {
  position: absolute;
  top: 55%;
  width: 100%;
  padding: 0 2.5rem;
  display: flex;
  justify-content: space-between;
}
@media screen and (max-width: 540px) {
  .page-about-push-content {
    flex-direction: column;
    top: 50%;
    padding: 0 var(--container-padding);
  }
}
.page-about-push-title {
  width: fit-content;
  line-height: 1.2;
}
@media screen and (max-width: 540px) {
  .page-about-push-title {
    font-size: 1.25rem;
  }
}
.page-about-push .component-circledButton {
  min-height: auto;
  margin-right: calc(6 * var(--vw));
}
.page-about-push .component-circledButton-arrow path {
  fill: #ffffff;
  stroke: #ffffff;
}
.page-about-push .component-circledButton-text {
  color: #ffffff;
}
@media screen and (max-width: 540px) {
  .page-about-push .component-circledButton {
    margin: 1.5rem 0 0 0;
    justify-content: flex-start;
  }
}

.page-ui-section {
  padding: 64px 0;
}
.page-ui-sectionTitle {
  margin-bottom: 32px;
}
.page-ui-colors {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-gap: 24px 4%;
}
.page-ui-colorsItem {
  padding-bottom: 100%;
}
.page-ui-colorsItem.is-black {
  background-color: #1c1b1a;
}
.page-ui-colorsItem.is-dark-black {
  background-color: #141313;
}
.page-ui-colorsItem.is-grey {
  background-color: #abb0b4;
}
.page-ui-colorsItem.is-white {
  background-color: #ffffff;
}
.page-ui-colorsItem.is-brown {
  background-color: #dacab5;
}
.page-ui-colorsItem.is-beige-light {
  background-color: #f9f4ed;
}
.page-ui-colorsItem.is-blue-light {
  background-color: #ccdcf7;
}
.page-ui-colorsItem.is-blue {
  background-color: #4185f4;
}
.page-ui-colorsItem.is-green {
  background-color: #e6fff5;
}
.page-ui-colorsItem.is-pink {
  background-color: #f5dada;
}
.page-ui-colorsItem.is-orange {
  background-color: #ff6c3c;
}
.page-ui-cursor {
  display: flex;
  justify-content: space-between;
}
.page-ui-cursorLink {
  width: 100px;
  height: 30px;
  background-color: #dacab5;
}
.page-ui-cursorSlider {
  width: 100px;
  height: 30px;
  background-color: #ccdcf7;
}
.page-ui-textLinks {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: flex-start;
  gap: 8px;
}
.page-ui-parallaxImage {
  display: inline-block;
  width: 500px;
  height: 300px;
}
.page-ui-cards {
  display: flex;
  flex-wrap: wrap;
  gap: 48px;
}

.page-home {
  background: #fefcfa;
}
.page-home .section-titleParagraph {
  margin: 0;
  background: #ede9e3;
  padding-bottom: calc(var(--section-padding) * 0.6);
  position: relative;
  z-index: 1;
  margin-top: -6rem;
}
.page-home .section-titleParagraph-wrapper {
  width: 66%;
  position: relative;
  z-index: 1;
}
@media screen and (max-width: 540px) {
  .page-home .section-titleParagraph-wrapper {
    width: 15.5rem;
    margin-left: auto;
  }
}
.page-home .section-titleParagraph-title {
  display: none;
}
.page-home-works {
  background: #ede9e3;
  overflow: hidden;
  display: flex;
  gap: 1.25rem;
  flex-wrap: nowrap;
}
.page-home-works .component-workCard {
  width: auto;
  flex-grow: 1;
}
.page-home-works .component-workCard .component-workCard-cover {
  padding-bottom: 110% !important;
}
@media screen and (max-width: 540px) {
  .page-home-works {
    flex-direction: column;
    gap: 2.5rem;
  }
}
.page-home-projectsButton {
  background: #ede9e3;
  display: flex;
  justify-content: flex-end;
  padding-right: 10.125rem;
  padding-top: calc(var(--section-padding) * 0.2);
  padding-bottom: calc(var(--section-padding) * 0.2);
}
@media screen and (max-width: 720px) {
  .page-home-projectsButton {
    padding-top: calc(var(--section-padding) * 0.6);
    padding-bottom: calc(var(--section-padding) * 0.6);
  }
}
@media screen and (max-width: 540px) {
  .page-home-projectsButton {
    padding-right: var(--container-padding);
  }
}

.page-projects {
  background: linear-gradient(#ffffff, #ede9e3 50%);
}
.page-projects-header {
  display: flex;
  justify-content: flex-start;
  padding-top: calc(var(--section-padding) * 0.85);
  padding-bottom: calc(var(--section-padding) * 0.4);
}
@media screen and (max-width: 720px) {
  .page-projects-header {
    padding-top: calc(var(--section-padding) * 1.84);
    padding-bottom: calc(var(--section-padding) * 0.75);
  }
}
@media screen and (max-width: 540px) {
  .page-projects-header {
    padding-bottom: 2.5rem;
    padding-top: 5.625rem;
  }
}
.page-projects-title {
  font-size: clamp(7.75rem, 11 * var(--vw), 9.75rem);
  color: #ede9e3;
  font-family: "VTC Carrie";
  text-transform: uppercase;
}
.page-projects-title .char:not(:first-child) {
  margin-left: -0.5rem;
}
@media screen and (max-width: 540px) {
  .page-projects-title {
    font-size: clamp(5rem, 11 * var(--vw), 11 * var(--vw));
    letter-spacing: 3px;
  }
}
.page-projects-amount {
  font-family: "Rebond Regular";
  letter-spacing: 0.05rem;
  padding-top: 0.9rem;
  margin-left: 4px;
}
@media screen and (max-width: 540px) {
  .page-projects-amount {
    padding-top: 0.375rem;
  }
}
.page-projects-figure {
  height: fit-content;
  margin-left: auto;
  margin-top: auto;
  padding-bottom: 1.5rem;
  padding-right: 2.5rem;
}
@media screen and (max-width: 540px) {
  .page-projects-figure {
    opacity: 0;
    visibility: hidden;
  }
}
.page-projects-gridRow {
  display: flex;
  align-items: flex-start;
  flex-wrap: wrap;
  gap: 1.25rem;
  padding-bottom: calc(var(--section-padding) * 0.72);
}
@media screen and (max-width: 720px) {
  .page-projects-gridRow {
    gap: calc(var(--section-padding) * 0.5);
    padding-bottom: calc(var(--section-padding) * 0.5);
  }
}
.page-projects-gridRow:nth-of-type(3n + 1) {
  justify-content: flex-end;
}
.page-projects-gridRow:nth-of-type(3n + 2) {
  justify-content: flex-start;
}
.page-projects-gridRow:nth-of-type(3n + 3) {
  justify-content: space-between;
  align-items: flex-end;
}
@media screen and (max-width: 540px) {
  .page-projects-gridRow {
    gap: calc(var(--section-padding) * 0.39125);
  }
}

.page-project .component-circledButton {
  display: flex;
  width: fit-content;
  margin-left: auto;
  padding-right: calc(var(--container-padding) * 0.35);
}
@media screen and (max-width: 1200px) {
  .page-project .component-circledButton {
    padding-right: var(--container-padding);
  }
}
.page-project .section-bigSmallImages {
  margin-top: 2.25rem;
}
@media screen and (max-width: 540px) {
  .page-project .section-bigSmallImages {
    margin-top: 5.25rem;
  }
}
.page-project-sliderSection {
  position: relative;
  display: flex;
  align-items: center;
  width: 100%;
  padding-top: calc(var(--section-padding) * 0.7);
  padding-bottom: calc(var(--section-padding) * 0.7);
}
@media screen and (max-width: 720px) {
  .page-project-sliderSection {
    padding-top: calc(var(--section-padding) * 0.15);
    padding-bottom: calc(var(--section-padding) * 0.15);
  }
}
.page-project-sliderSection-figure {
  position: absolute;
  left: -35%;
  width: 100%;
  height: auto;
  z-index: -1;
}
@media screen and (max-width: 720px) {
  .page-project-sliderSection-figure {
    width: 110%;
    top: -60%;
  }
}

.component-circledButton {
  position: relative;
  min-height: 152px;
  display: inline-flex;
  justify-content: center;
  align-items: center;
}
@media screen and (max-width: 540px) {
  .component-circledButton {
    min-height: 76px;
  }
}
@media (any-hover: hover) {
  .component-circledButton:not([disabled]):hover .component-circledButton-text {
    transform: translateX(-76px);
    transition-delay: 0.18s;
  }
  .component-circledButton:not([disabled]):hover .component-circledButton-whitespace--first .component-circledButton-arrow {
    transform: translateX(112px);
    transition-delay: 0s;
  }
  .component-circledButton:not([disabled]):hover .component-circledButton-whitespace--second .component-circledButton-arrow {
    transform: translateX(70px);
    transition-delay: 0.32s;
  }
}
.component-circledButton-content {
  position: relative;
  display: flex;
  justify-content: space-between;
  padding: 0 7px;
  font-size: calc(clamp(5.5em, 7 * var(--vw), 8em) * 0.159);
  align-items: center;
}
.component-circledButton-text {
  font-family: "Rebond Regular";
  color: #1c1b1a;
  transition: transform 0.8s cubic-bezier(0.11, 0.9, 0.09, 1);
  transition-delay: 0.18s;
}
@media screen and (max-width: 540px) {
  .component-circledButton-text {
    font-size: 1.125rem;
  }
}
.component-circledButton-whitespace {
  position: relative;
  width: 76px;
  overflow: hidden;
  display: flex;
  height: 16px;
}
.component-circledButton-whitespace--first .component-circledButton-arrow {
  transition-delay: 0.32s;
}
.component-circledButton-whitespace--second {
  position: absolute;
  right: 0;
}
.component-circledButton-whitespace--second .component-circledButton-arrow {
  position: absolute;
  right: 100%;
  transition-delay: 0s;
  transform: translate(-10px);
}
.component-circledButton-arrow {
  transition: transform 0.8s cubic-bezier(0.11, 0.9, 0.09, 1);
}
@media screen and (max-width: 720px) {
  .component-circledButton-arrow {
    width: 15px;
  }
}
.component-circledButton-parenthesis {
  position: absolute;
  padding-top: 3px;
}
.component-circledButton-parenthesis--left {
  left: 0;
}
.component-circledButton-parenthesis--right {
  right: 0;
}

.component-contactMe {
  pointer-events: none;
  position: relative;
  z-index: 3;
}
.component-contactMe-menu {
  position: fixed;
  top: 0;
  left: 0;
  width: calc(100 * var(--vw));
  padding-top: 2.125rem;
  display: flex;
  justify-content: space-between;
}
.component-contactMe-menuClose {
  width: 48px;
  height: 48px;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
  border: 1px solid #ffffff;
}
.component-contactMe-menuCloseBar {
  position: absolute;
  width: 16px;
  height: 1px;
  background-color: #ffffff;
  transform-origin: left;
}
.component-contactMe-menuCloseBar:first-of-type {
  transform: translateX(2px) translateY(-6px) rotate(45deg);
}
.component-contactMe-menuCloseBar:last-of-type {
  transform: translateX(2px) translateY(5px) rotate(-45deg);
}
.component-contactMe-content {
  position: fixed;
  top: 0;
  left: 0;
  width: calc(100 * var(--vw));
  height: calc(100 * var(--vh));
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  align-items: flex-end;
  padding: 4rem 7.6rem;
  clip-path: circle(0 at 90% 81%);
  background-color: #ff6c3c;
  pointer-events: auto;
}
@media screen and (max-width: 720px) {
  .component-contactMe-content {
    padding: 1.7rem 1.7rem;
  }
}
.component-contactMe-mail {
  display: block;
  font-family: "Rebond Regular";
  font-size: clamp(1.375rem, 3 * var(--vw), 2.5rem);
  line-height: 1.31;
}
.component-contactMe-mailMask {
  overflow: hidden;
}
.component-contactMe-social {
  display: flex;
  gap: 70px;
  margin-top: 6rem;
}
@media screen and (max-width: 720px) {
  .component-contactMe-social {
    margin-top: 5rem;
  }
}
.component-contactMe-socialItem {
  overflow: hidden;
}
.component-contactMe-socialLink {
  position: relative;
  display: block;
  text-transform: uppercase;
  padding-bottom: 4px;
}
.component-contactMe-socialLinkBar {
  position: absolute;
  bottom: 0;
  left: 0;
  display: block;
  width: 100%;
  height: 1px;
  background-color: #ffffff;
  transform-origin: left;
  transform: scaleX(0);
}
.component-contactMe-button {
  position: fixed;
  right: 4.5rem;
  bottom: 4.5rem;
  width: 8rem;
  height: 8rem;
  display: flex;
  justify-content: center;
  align-items: center;
  background-image: url(spot-orange.png);
  background-repeat: no-repeat;
  background-size: cover;
  font-family: "Neue Thin";
  font-size: 1.25rem;
  letter-spacing: -1px;
  line-height: 0.85;
  color: #ffffff;
  pointer-events: all;
}
@media screen and (max-width: 720px) {
  .component-contactMe-button {
    position: static;
  }
}

.component-cursor {
  --translateX: 0px;
  --translateY: 0px;
  --skewX: 0deg;
  --skewY: 0deg;
  position: fixed;
  top: 0;
  left: 0;
  width: calc(100 * var(--vw));
  height: calc(100 * var(--vh));
  pointer-events: none;
  position: fixed;
  z-index: 5;
}
.component-cursor.is-down.on-slider .component-cursor-backgroundContainer {
  transform: scale(0.8);
}
.component-cursor.is-down.on-slider .component-cursor-contentContainer {
  transform: scaleX(1.1);
}
.component-cursor.is-down.on-link .component-cursor-backgroundContainer {
  transform: scale(0.8);
}
.component-cursor.is-down.on-link .component-cursor-contentContainer {
  transform: scaleX(1.2) translate3d(-5px, -5px, 0) rotate(15deg);
}
.component-cursor.is-white .component-cursor-background {
  background-image: url(spot-white.png);
}
.component-cursor.is-white .component-cursor-arrow svg path {
  stroke: #141313;
}
.component-cursor.is-brown .component-cursor-background {
  background-image: url(spot-brown.png);
}
.component-cursor.on-link .component-cursor-inner {
  opacity: 1;
  transform: scale(1) rotate(-40deg);
}
.component-cursor.on-slider .component-cursor-inner {
  opacity: 1;
  transform: scale(1) rotate(0deg);
}
.component-cursor.on-slider .component-cursor-background {
  transform: scale(1.2);
}
.component-cursor.on-slider .component-cursor-arrow.is-left {
  opacity: 1;
  transform: translate3d(-40%, 0, 0);
}
.component-cursor.on-slider .component-cursor-arrow.is-right {
  transform: translate3d(40%, 0, 0);
}
.component-cursor-wrapper {
  display: inline-block;
  transform: translate3d(calc(var(--translateX) - 50%), calc(var(--translateY) - 50%), 0) skewX(var(--skewX)) skewY(var(--skewX));
  transition: transform cubic-bezier(0.11, 0.9, 0.09, 1) 0.8s;
}
.component-cursor-inner {
  position: relative;
  width: 112px;
  height: 112px;
  display: flex;
  justify-content: center;
  align-items: center;
  opacity: 0;
  transform: scale(0);
  transition: transform 0.7s cubic-bezier(0.11, 0.9, 0.09, 1), opacity 0.15s linear;
}
.component-cursor-backgroundContainer {
  position: absolute;
  width: 100%;
  height: 100%;
  transition: transform 1.7s cubic-bezier(0.06, 0.645, 0, 0.985);
}
.component-cursor-background {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url(spot-orange.png);
  background-size: contain;
  background-repeat: no-repeat;
  transition: transform 0.4s cubic-bezier(0.18, 0.64, 0.21, 0.97);
}
.component-cursor-contentContainer {
  position: absolute;
  transition: transform 1.7s cubic-bezier(0.06, 0.645, 0, 0.985);
  transform-origin: left bottom;
}
.component-cursor-content {
  display: flex;
  transition: transform 1.7s cubic-bezier(0.06, 0.645, 0, 0.985);
}
.component-cursor-arrow {
  width: 23px;
  height: 21px;
  transition: 1s cubic-bezier(0.06, 0.645, 0, 0.985);
  transition-property: opacity, transform;
}
.component-cursor-arrow.is-left {
  opacity: 0;
  transform: translate3d(50%, 0, 0);
}
.component-cursor-arrow.is-right {
  transform: translate3d(-50%, 0, 0);
}
.component-cursor-arrow svg path {
  stroke: #ffffff;
  transition: stroke 0.7s cubic-bezier(0.06, 0.645, 0, 0.985);
}

.component-footer {
  position: relative;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  color: #1c1b1a;
  overflow: hidden;
  background: #ede9e3;
  min-height: auto;
}
@media screen and (max-width: 1200px) {
  .component-footer {
    min-height: 27.063rem;
  }
}
.component-footer-mask {
  width: 100%;
  height: 100%;
  background-color: #ffffff;
  will-change: clip-path;
}
.component-footer-wrapper {
  width: 100%;
  padding-top: calc(var(--section-padding) * 0.18);
  padding-bottom: calc(var(--section-padding) * 0.24);
  background: #fefcfa;
}
.component-footer-top {
  display: flex;
  justify-content: center;
  position: relative;
}
@media screen and (max-width: 1200px) {
  .component-footer-top {
    splay: block;
  }
}
@media screen and (max-width: 720px) {
  .component-footer-text {
    padding-bottom: 2.625rem;
  }
}
@media screen and (max-width: 540px) {
  .component-footer-text {
    padding-bottom: 4.688rem;
  }
}
.component-footer-mail {
  position: relative;
  font-family: "Rebond Regular";
  margin-bottom: 0.875rem;
  display: block;
  transition: color 1s cubic-bezier(0.11, 0.9, 0.09, 1);
}
@media (any-hover: hover) {
  .component-footer-mail:not([disabled]):hover {
    color: #ff6c3c;
  }
}
@media screen and (max-width: 540px) {
  .component-footer-mail {
    margin-bottom: 0.5rem;
  }
}
.component-footer-mailText {
  position: relative;
  z-index: 1;
}
.component-footer-title {
  margin-bottom: 24px;
  font-size: clamp(4.125rem, 22 * var(--vw), 24 * var(--vw));
  color: #ede9e3;
  font-family: "VTC Carrie";
  text-transform: uppercase;
  letter-spacing: -0.825rem;
  white-space: nowrap;
}
@media screen and (max-width: 540px) {
  .component-footer-title {
    font-size: clamp(5rem, 18 * var(--vw), 22 * var(--vw));
    letter-spacing: -2px;
    margin-bottom: 0;
  }
}
.component-footer-paragraph {
  max-width: 320px;
}
.component-footer-bottom {
  display: flex;
  flex-direction: column;
  padding: 3.5rem 0 0 44rem;
}
@media screen and (max-width: 720px) {
  .component-footer-bottom {
    flex-direction: column;
    align-items: flex-end;
    padding: 1.5rem 0;
  }
}
@media screen and (max-width: 540px) {
  .component-footer-bottom {
    padding: 0;
  }
}
.component-footer-content {
  display: flex;
  flex-wrap: nowrap;
  font-family: "Rebond Regular";
}
@media screen and (max-width: 540px) {
  .component-footer-content {
    flex-direction: column;
  }
}
.component-footer-content-activities {
  margin-left: calc(8 * var(--vw));
  margin-top: unset;
}
@media screen and (max-width: 540px) {
  .component-footer-content-activities {
    display: flex;
    flex-direction: column;
    margin-left: 0;
    margin-top: 2rem;
  }
}
.component-footer-content-activities-text {
  line-height: 1.25;
}
.component-footer-subtitle {
  color: #ff6c3c;
  margin-bottom: 0.875rem;
  line-height: 1;
}
@media screen and (max-width: 540px) {
  .component-footer-subtitle {
    margin-bottom: 0.563rem;
  }
}
.component-footer-social-item {
  display: inline-block;
  line-height: 1.25;
  transition: color 1s cubic-bezier(0.11, 0.9, 0.09, 1);
}
@media (any-hover: hover) {
  .component-footer-social-item:not([disabled]):hover {
    color: #ff6c3c;
  }
}
@media screen and (max-width: 720px) {
  .component-footer-social-list {
    width: 100%;
  }
}
@media screen and (max-width: 540px) {
  .component-footer-social-list {
    width: 75%;
  }
}
.component-footer-social-link {
  text-transform: capitalize;
  line-height: 1.25;
  display: flex;
}
.component-footer-social-link .line {
  overflow: hidden;
}
.component-footer-signature {
  position: relative;
  display: flex;
  align-items: center;
}
@media screen and (max-width: 720px) {
  .component-footer-signature {
    margin-top: 60px;
  }
}
@media screen and (max-width: 540px) {
  .component-footer-signature {
    margin-top: 0;
  }
}
.component-footer-legal {
  font-family: "Rebond Regular";
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 2.625rem;
  font-size: 0.875rem;
}
@media screen and (max-width: 540px) {
  .component-footer-legal {
    width: 100%;
    font-size: 11.25px;
  }
}
.component-footer-signature-link {
  font-family: "Rebond Regular";
  position: relative;
  z-index: 3;
}
@media screen and (max-width: 540px) {
  .component-footer-signature-link {
    font-size: inherit;
  }
}
@media screen and (max-width: 540px) {
  .component-footer-signature-link .ui-underlineLink {
    padding-bottom: 0;
  }
  .component-footer-signature-link .ui-underlineLink::before, .component-footer-signature-link .ui-underlineLink::after {
    display: none;
  }
}
.component-footer-signature-figure {
  position: absolute;
  left: 82px;
  bottom: -80px;
}
@media screen and (max-width: 720px) {
  .component-footer-signature-figure {
    left: -31px;
    transform: rotate(13deg);
  }
}
@media screen and (max-width: 540px) {
  .component-footer-signature-figure {
    left: 18px;
    bottom: 48px;
  }
}
.component-footer-signature-figure .component-svgReveal svg {
  width: 172px;
}
@media screen and (max-width: 720px) {
  .component-footer-signature-figure .component-svgReveal svg {
    width: 37px;
  }
}

.app.is-dark .component-navigation-entryFigure path {
  stroke: #f5ede2;
}
.app.is-dark .component-navigation-entry {
  color: #f5ede2;
}
.app.is-dark .component-navigation-entry path {
  stroke: #f5ede2;
}

.component-navigation {
  top: 0;
  left: 0;
  width: 100%;
  pointer-events: none;
  position: fixed;
  z-index: 2;
}
.component-navigation-container {
  display: flex;
  padding-top: 1.625rem;
  justify-content: space-between;
}
@media screen and (max-width: 720px) {
  .component-navigation-container {
    align-items: center;
  }
}
@media screen and (max-width: 540px) {
  .component-navigation-container {
    justify-self: unset;
    padding-top: 1.5rem;
  }
}
.component-navigation-entries {
  display: flex;
  align-items: center;
  gap: 40px;
}
@media screen and (max-width: 720px) {
  .component-navigation-entries {
    gap: 24px;
  }
}
.component-navigation-entry {
  display: block;
  color: #1c1b1a;
  pointer-events: auto;
  font-family: "Rebond Regular";
  font-size: clamp(0.875rem, 1.1 * var(--vw), 1rem);
}
.component-navigation-entry path {
  stroke: #ff6c3c;
}
.component-navigation-entry:nth-child(2) {
  margin: 0;
}
@media screen and (max-width: 540px) {
  .component-navigation-entry:nth-child(2) {
    margin-left: auto;
    margin-right: 1rem;
  }
}
.component-navigation-entryFigure {
  width: 58px;
}
@media screen and (max-width: 720px) {
  .component-navigation-entryFigure {
    width: 48px;
  }
}
.component-navigation-entryFigure path {
  stroke: #1c1b1a;
}

.component-preloader {
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: fixed;
  z-index: 4;
}
.component-preloader-wrapper {
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #fefcfa;
  will-change: clip-path;
}
.component-preloader-logo {
  display: flex;
  justify-content: center;
  align-items: center;
}
.component-preloader-logoFrame {
  position: absolute;
  width: 15%;
  height: auto;
}
@media screen and (max-width: 720px) {
  .component-preloader-logoFrame {
    width: 40%;
  }
}
.component-preloader-name {
  position: absolute;
  display: flex;
  align-items: center;
}
.component-preloader-nameWord {
  color: #1c1b1a;
  letter-spacing: -1%;
  font-size: 1.5rem;
}
@media screen and (max-width: 540px) {
  .component-preloader-nameWord {
    font-size: 1rem;
  }
}
.component-preloader-nameCarret {
  position: absolute;
  top: 0;
  right: -4px;
  width: 2px;
  height: 100%;
  background-color: #1c1b1a;
  animation: flash 0.75s infinite reverse;
}
@media screen and (max-width: 540px) {
  .component-preloader-nameCarret {
    width: 1px;
  }
}
.component-preloader-scribble {
  position: absolute;
  width: 65%;
}
.component-preloader-scribble svg {
  width: 100%;
}
.component-preloader-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

@keyframes flash {
  0% {
    opacity: 1;
  }
  50% {
    opacity: 1;
  }
  51% {
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}
.component-scribbleLink {
  position: relative;
  display: inline-flex;
  justify-content: center;
  white-space: pre;
}
.component-scribbleLink-scribble {
  position: absolute;
  top: 90%;
  width: 110%;
  visibility: hidden;
}

.component-svgReveal svg {
  width: 100%;
  height: 100%;
}

.component-parallax {
  width: 100%;
  height: 100%;
  overflow: hidden;
}
.component-parallax-container {
  width: 100%;
  height: 100%;
  will-change: transform;
}

.component-workCard {
  display: inline-block;
}
.component-workCard.is-horizontal {
  width: 36.7%;
  min-width: calc(360px - var(--container-padding) - 3.3%);
}
.component-workCard.is-horizontal .component-workCard-cover {
  padding-bottom: 79%;
}
.component-workCard.is-square {
  width: 36.7%;
  min-width: calc(360px - var(--container-padding) - 3.3%);
}
.component-workCard.is-square .component-workCard-cover {
  padding-bottom: 98.3%;
}
.component-workCard.is-vertical {
  width: 36.7%;
  min-width: calc(360px - var(--container-padding) - 3.3%);
}
.component-workCard.is-vertical .component-workCard-cover {
  padding-bottom: 125%;
}
@media screen and (max-width: 720px) {
  .component-workCard.is-horizontal, .component-workCard.is-vertical, .component-workCard.is-square {
    width: 100%;
  }
  .component-workCard.is-horizontal .component-workCard-cover, .component-workCard.is-vertical .component-workCard-cover, .component-workCard.is-square .component-workCard-cover {
    padding-bottom: 64%;
  }
}
@media screen and (max-width: 540px) {
  .component-workCard.is-horizontal .component-workCard-cover, .component-workCard.is-vertical .component-workCard-cover, .component-workCard.is-square .component-workCard-cover {
    padding-bottom: 98.2%;
  }
}
@media (any-hover: hover) {
  .component-workCard:not([disabled]):hover .component-workCard-coverInner {
    transform: scale(1.1);
  }
}
.component-workCard-wrapper {
  display: inline-block;
  width: 100%;
}
.component-workCard-cover {
  position: relative;
  width: 100%;
  overflow: hidden;
  z-index: 1;
}
.component-workCard-coverInner {
  position: absolute;
  width: 100%;
  height: 100%;
  transition: transform 1.4s cubic-bezier(0.06, 0.645, 0, 0.985);
}
.component-workCard-content {
  padding-top: 1rem;
}
@media screen and (max-width: 720px) {
  .component-workCard-content {
    padding-top: 1.5rem;
  }
}
@media screen and (max-width: 540px) {
  .component-workCard-content {
    padding-top: 0.813rem;
  }
}
.component-workCard-details {
  display: flex;
  justify-content: space-between;
  font-family: "Rebond Regular";
}
.component-workCard-name {
  line-height: 1.2;
}
@media screen and (max-width: 540px) {
  .component-workCard-name {
    font-size: 1.125rem;
  }
}
@media screen and (max-width: 540px) {
  .component-workCard-excerpt {
    font-size: 0.875rem;
  }
}

.section-work {
  display: flex;
  justify-content: flex-start;
  margin-top: calc(var(--section-padding) * 1.6);
  margin-bottom: calc(var(--section-padding) * 1.6);
  position: relative;
  z-index: 2;
}
@media screen and (max-width: 720px) {
  .section-work {
    margin-top: calc(var(--section-padding) * 0.8);
    margin-bottom: calc(var(--section-padding) * 0.8);
  }
}
.section-work.is-visible .section-work__cover {
  clip-path: polygon(100% 0, 0 0, 0 100%, 100% 100%);
}
.section-work.is-visible .section-work__cover-overlay {
  clip-path: polygon(100% 0, 100% 0, 100% 100%, 100% 100%);
}
@media (any-hover: hover) {
  .section-work.is-visible .section-work__link:not([disabled]):hover .section-work__cover {
    transform: scale(0.95);
  }
  .section-work.is-visible .section-work__link:not([disabled]):hover .section-work__cover-inner .component-parallax {
    transform: scale(1.1);
  }
}
.section-work.is-alignCenter {
  justify-content: center;
}
.section-work.is-horizontal .section-work__cover, .section-work.is-square .section-work__cover {
  width: calc(50.4 * var(--vw));
  aspect-ratio: 1.67;
  padding-bottom: 61%;
}
@media screen and (max-width: 1200px) {
  .section-work.is-horizontal .section-work__cover, .section-work.is-square .section-work__cover {
    width: calc(64 * var(--vw));
  }
}
@media screen and (max-width: 720px) {
  .section-work.is-horizontal .section-work__cover, .section-work.is-square .section-work__cover {
    width: 100%;
  }
}
.section-work.is-vertical .section-work__cover {
  padding-bottom: 141%;
  width: calc(26.6 * var(--vw));
  aspect-ratio: 0.7;
}
@media screen and (max-width: 1200px) {
  .section-work.is-vertical .section-work__cover {
    width: calc(32 * var(--vw));
  }
}
@media screen and (max-width: 720px) {
  .section-work.is-vertical .section-work__cover {
    width: 100%;
  }
}
.section-work.is-vertical .section-work__scribble {
  width: 50%;
  top: 87%;
  left: -27%;
}
@media screen and (max-width: 720px) {
  .section-work.is-vertical .section-work__scribble {
    width: 35%;
    top: 62%;
    right: -5%;
    left: unset;
  }
}
.section-work.is-vertical .section-work__text {
  min-width: 130%;
}
@media screen and (max-width: 720px) {
  .section-work.is-vertical .section-work__text {
    min-width: unset;
  }
}
.section-work.is-vertical.is-alignCenter {
  padding-right: calc(1 * var(--vw));
}
.section-work.is-vertical.is-alignCenter .section-work__cover {
  width: calc(30 * var(--vw));
}
@media screen and (max-width: 1200px) {
  .section-work.is-vertical.is-alignCenter .section-work__cover {
    width: calc(36 * var(--vw));
    padding-right: calc(3 * var(--vw));
  }
}
@media screen and (max-width: 720px) {
  .section-work.is-vertical.is-alignCenter .section-work__cover {
    width: 100%;
    padding-right: 0;
  }
}
.section-work.is-vertical.is-alignLeft {
  margin-left: 8rem;
}
@media screen and (max-width: 720px) {
  .section-work.is-vertical.is-alignLeft {
    margin-left: 0;
  }
}
.section-work.is-horizontal.is-alignLeft .section-work__scribble, .section-work.is-square.is-alignLeft .section-work__scribble {
  width: 13%;
  top: 93%;
  left: 4%;
}
@media screen and (max-width: 720px) {
  .section-work.is-horizontal.is-alignLeft .section-work__scribble, .section-work.is-square.is-alignLeft .section-work__scribble {
    width: 11%;
    top: -10%;
    left: 3%;
  }
}
.section-work.is-horizontal.is-alignCenter .section-work__container, .section-work.is-square.is-alignCenter .section-work__container {
  flex-direction: row-reverse;
}
.section-work.is-horizontal.is-alignCenter .section-work__scribble, .section-work.is-square.is-alignCenter .section-work__scribble {
  width: 30%;
  top: -10%;
  left: 90%;
}
@media screen and (max-width: 720px) {
  .section-work.is-horizontal.is-alignCenter .section-work__scribble, .section-work.is-square.is-alignCenter .section-work__scribble {
    width: 26%;
    top: -6%;
    left: unset;
    right: 0;
  }
}
.section-work.is-horizontal.is-alignCenter .section-work__header, .section-work.is-square.is-alignCenter .section-work__header {
  flex-direction: row-reverse;
}
@media screen and (max-width: 720px) {
  .section-work.is-horizontal.is-alignCenter .section-work__header, .section-work.is-square.is-alignCenter .section-work__header {
    flex-direction: row;
  }
}
.section-work.is-horizontal.is-alignCenter .section-work__index, .section-work.is-square.is-alignCenter .section-work__index {
  margin: 4px 16px 0 0;
}
@media screen and (max-width: 720px) {
  .section-work.is-horizontal.is-alignCenter .section-work__index, .section-work.is-square.is-alignCenter .section-work__index {
    margin: 10px 0 0 12px;
  }
}
.section-work.is-beige__cover-overlay,
.section-work .section-work__cover-overlay {
  background-color: #f5ede2;
}
.section-work.is-lightblue .section-work__cover-overlay {
  background-color: #ccdcf7;
}
.section-work.is-blue__cover-overlay,
.section-work .section-work__cover-overlay {
  background-color: #4185f4;
}
.section-work.is-green__cover-overlay,
.section-work .section-work__cover-overlay {
  background-color: #e6fff5;
}
.section-work.is-pink__cover-overlay,
.section-work .section-work__cover-overlay {
  background-color: #f5dada;
}
.section-work.is-orange__cover-overlay,
.section-work .section-work__cover-overlay {
  background-color: #ff6c3c;
}
.section-work__container {
  display: flex;
  align-items: center;
  gap: 48px;
}
@media screen and (max-width: 720px) {
  .section-work__container {
    flex-direction: column !important;
    gap: 8px;
  }
}
@media screen and (max-width: 720px) {
  .section-work__link {
    width: 100%;
  }
}
.section-work__coverContainer {
  position: relative;
}
@media screen and (max-width: 720px) {
  .section-work__coverContainer {
    width: 100%;
  }
}
.section-work__cover {
  position: relative;
  width: 100%;
  clip-path: polygon(0 0, 0 0, 0 100%, 0% 100%);
  transition: clip-path 0.7s cubic-bezier(0.06, 0.645, 0, 0.985), transform 0.9s cubic-bezier(0.06, 0.645, 0, 0.985);
}
.section-work__cover-inner {
  position: absolute;
  width: 100%;
  height: 100%;
  overflow: hidden;
  transition: transform 1.8s cubic-bezier(0.06, 0.645, 0, 0.985) 0.4s;
}
.section-work__cover-inner .component-parallax {
  transition: transform 1.4s cubic-bezier(0.06, 0.645, 0, 0.985);
}
.section-work__cover-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  clip-path: polygon(100% 0, 0 0, 0 100%, 100% 100%);
  transition: clip-path 1.4s cubic-bezier(0.06, 0.645, 0, 0.985) 0.4s;
}
@media screen and (max-width: 720px) {
  .section-work__text {
    width: 100%;
    margin-top: 16px;
  }
}
.section-work__header {
  position: relative;
  max-width: calc(32 * var(--vw));
}
@media screen and (max-width: 720px) {
  .section-work__header {
    max-width: unset;
  }
}
.section-work__name {
  display: inline-block;
  color: #f5ede2;
  text-transform: lowercase;
}
.section-work__index {
  position: absolute;
  font-family: "Rebond Regular";
  color: #f5ede2;
  margin: 10px 0 0 10px;
  overflow: hidden;
}
.section-work__tags {
  display: flex;
  flex-direction: column;
  gap: 4px;
  margin: 24px 0 0 0;
}
@media screen and (max-width: 720px) {
  .section-work__tags {
    flex-direction: row;
    gap: 16px;
    margin: 12px 0 0 0;
  }
}
.section-work__tag-item {
  font-family: "Neue Regular";
  color: #f5ede2;
  text-transform: uppercase;
  overflow: hidden;
}
.section-work__scribble {
  position: absolute;
}
.section-work__scribble svg path {
  stroke-width: 2px;
}
@media (max-width: 720px) {
  .section-work__scribble svg path {
    stroke-width: 3px;
  }
}

.section-horizontalTextImage {
  padding-top: calc(var(--section-padding) * 0.7);
  padding-bottom: calc(var(--section-padding) * 0.7);
}
@media screen and (max-width: 1200px) {
  .section-horizontalTextImage {
    padding-top: calc(var(--section-padding) * 0.54);
    padding-bottom: calc(var(--section-padding) * 0.84);
  }
}
.section-horizontalTextImage.is-reverse .section-horizontalTextImage-container {
  flex-direction: row-reverse;
}
@media screen and (max-width: 1200px) {
  .section-horizontalTextImage.is-reverse .section-horizontalTextImage-container {
    flex-direction: column;
  }
}
.section-horizontalTextImage-container {
  display: flex;
  justify-content: space-between;
  gap: calc(10 * var(--vw));
}
@media screen and (max-width: 1200px) {
  .section-horizontalTextImage-container {
    flex-direction: column;
  }
}
.section-horizontalTextImage-text {
  width: 100%;
  max-width: 410px;
}
@media screen and (max-width: 1200px) {
  .section-horizontalTextImage-text {
    max-width: 100%;
  }
}
.section-horizontalTextImage-title {
  margin-bottom: 1rem;
}
.section-horizontalTextImage-wysiwyg {
  font-size: 1rem;
  line-height: 1.63;
}
.section-horizontalTextImage-wysiwyg .line {
  overflow: visible;
}
.section-horizontalTextImage-imageContainer {
  width: 100%;
}
.section-horizontalTextImage-image {
  position: relative;
  width: 100%;
  max-width: 652px;
  height: 0;
  padding-bottom: 61.2%;
}
.section-horizontalTextImage-image .component-parallax {
  height: unset;
}

.section-slider {
  width: 100%;
  overflow: hidden;
}
.section-slider-container {
  width: 100%;
  display: inline-flex;
  justify-content: left;
  align-items: center;
  cursor: grab;
  overflow: visible;
}
.section-slider-wrapper {
  flex-shrink: 0;
  display: flex;
  justify-content: flex-start;
  align-items: center;
}
.section-slider-slide {
  flex-shrink: 0;
  display: inline-block;
  margin: 0 12px;
  overflow: hidden;
}
.section-slider-slide img {
  max-width: calc(60 * var(--vw));
  max-height: calc(100 * var(--vh));
  width: auto;
  height: auto;
}
.section-slider-slideImage {
  width: 100%;
  height: 100%;
  object-fit: cover;
}

.section-homeHeader {
  position: relative;
  width: 100%;
  min-height: -webkit-fill-available;
  overflow: hidden;
  position: relative;
  z-index: 1;
}
.section-homeHeader-gradient {
  height: calc(30 * var(--vh));
  width: 100%;
  background: linear-gradient(#fefcfa 0%, #ede9e3 50%);
  pointer-events: none;
}
.section-homeHeader-canvas {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  -ms-touch-action: pan-y;
  touch-action: pan-y;
  z-index: 1;
}
.section-homeHeader-canvas > canvas {
  display: none;
}
.section-homeHeader-canvas > canvas:last-of-type {
  display: block;
}
.section-homeHeader-container {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: calc(calc(100 * var(--vh)) + calc(2.8 * var(--vw)));
}
.section-homeHeader-content {
  position: relative;
  z-index: 3;
  z-index: 1;
  margin-bottom: 2rem;
}
@media screen and (max-width: 540px) {
  .section-homeHeader-content {
    margin-bottom: 0.75rem;
  }
}
.section-homeHeader-title {
  display: flex;
  align-items: flex-start;
  color: #ede9e3;
}
.section-homeHeader-titleChar {
  margin-left: calc(-0.5 * var(--vw));
  overflow: hidden;
}
.section-homeHeader-titleShapes {
  max-width: calc(22.22 * var(--vw));
  width: clamp(5.2rem, 15.2 * var(--vw), 22.22 * var(--vw));
  margin-left: calc(-2.5 * var(--vw));
  transform: translateY(-6px);
  overflow: hidden;
}
@media screen and (max-width: 1200px) {
  .section-homeHeader-titleShapes {
    transform: translateY(-4px);
  }
}
@media screen and (max-width: 720px) {
  .section-homeHeader-titleShapes {
    transform: translateY(1px);
  }
}
.section-homeHeader-titleShapes svg {
  width: 100%;
  height: auto;
}
.section-homeHeader-baseline {
  font-family: "Rebond Regular";
  font-size: 1.25rem;
  line-height: 1.2;
  color: #1c1b1a;
  margin-top: 4px;
  margin: auto auto 3.5rem auto;
}
@media screen and (max-width: 540px) {
  .section-homeHeader-baseline {
    margin: auto auto calc(40 * var(--vh)) auto;
    font-size: 1rem;
  }
}

.section-projectHeader {
  position: relative;
}
.section-projectHeader-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-top: calc(18 * var(--vh));
  gap: 16px;
}
@media screen and (max-width: 540px) {
  .section-projectHeader-container {
    gap: 16px;
    padding-top: 4.75rem;
  }
}
.section-projectHeader-text {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  position: relative;
  z-index: 3;
}
.section-projectHeader-title {
  font-family: "Rebond Regular";
}
@media screen and (max-width: 540px) {
  .section-projectHeader-title {
    font-size: 2rem;
    letter-spacing: -1px;
  }
}
.section-projectHeader-year {
  font-size: 1.25rem;
  margin-bottom: 1rem;
}
@media screen and (max-width: 540px) {
  .section-projectHeader-year {
    font-size: 1.125rem;
    margin-bottom: 0.75rem;
  }
}
.section-projectHeader-bottom {
  position: relative;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.section-projectHeader-cover {
  position: relative;
  width: 100%;
  height: 0;
  padding-bottom: 58%;
}
.section-projectHeader-cover .component-parallax {
  height: unset;
}
.section-projectHeader-details {
  display: flex;
  gap: 3.125rem;
  margin-left: auto;
  margin-right: 3rem;
  margin-top: 2rem;
  font-family: "Rebond Regular";
  padding: 0;
}
@media screen and (max-width: 540px) {
  .section-projectHeader-details {
    gap: 1.875rem;
    margin-right: 0;
    margin-left: 0;
    margin-top: 2.5rem;
    width: 100%;
    padding-left: var(--container-padding);
    padding-right: var(--container-padding);
  }
}
.section-projectHeader-description {
  display: flex;
  gap: 2.5rem;
}
@media screen and (max-width: 540px) {
  .section-projectHeader-description {
    gap: 1rem;
    flex: 1;
    flex-direction: column;
  }
}
.section-projectHeader-descriptionItem {
  max-width: calc(22 * var(--vw));
  font-size: calc(clamp(5.5em, 7 * var(--vw), 8em) * 0.2);
  line-height: 1.25;
}
@media screen and (max-width: 540px) {
  .section-projectHeader-descriptionItem {
    font-size: 1.125rem;
    max-width: none;
  }
}
.section-projectHeader-tags {
  display: flex;
  flex-direction: column;
  margin-right: calc(7 * var(--vw));
}
@media screen and (max-width: 1200px) {
  .section-projectHeader-tags {
    padding: 1.5rem 0 0 0;
    top: 100%;
  }
}
@media screen and (max-width: 540px) {
  .section-projectHeader-tags {
    display: none;
  }
}
.section-projectHeader-tagsItem {
  text-transform: capitalize;
  font-size: 1rem;
  line-height: 1.2;
}
@media screen and (max-width: 540px) {
  .section-projectHeader-tagsItem {
    font-size: 0.875rem;
  }
}

.section-nextProject {
  width: 100%;
  height: calc(calc(100 * var(--vh)) + clamp(422px, calc(68 * var(--vh)), 500px));
}
@media screen and (max-width: 540px) {
  .section-nextProject {
    height: calc(calc(100 * var(--vh)) + calc(90 * var(--vh)));
  }
}
.section-nextProject-container {
  position: sticky;
  top: 0;
  display: flex;
  align-items: flex-end;
  width: 100%;
  height: calc(100 * var(--vh));
}
.section-nextProject-content {
  position: relative;
  width: 100%;
  height: clamp(422px, 68 * var(--vh), 500px);
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #ede9e3;
  pointer-events: none;
}
@media screen and (max-width: 540px) {
  .section-nextProject-content {
    height: calc(90 * var(--vh));
  }
}
.section-nextProject-scribble {
  position: absolute;
}
@media screen and (max-width: 720px) {
  .section-nextProject-scribble {
    width: 140px;
  }
}
.section-nextProject-title {
  display: inline-flex;
  gap: calc(5 * var(--vw));
  position: relative;
  z-index: 3;
}
.section-nextProject-title .line {
  overflow: visible;
}

.section-verticalTextImage {
  padding-bottom: calc(var(--section-padding) * 0.7);
}
@media screen and (max-width: 720px) {
  .section-verticalTextImage {
    padding-bottom: calc(var(--section-padding) * 0.34);
  }
}
.section-verticalTextImage-container {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.section-verticalTextImage-header {
  margin-bottom: 1.5rem;
}
.section-verticalTextImage-title {
  text-align: center;
  position: relative;
  z-index: 3;
}
.section-verticalTextImage-image {
  position: relative;
  max-width: 80%;
}
.section-verticalTextImage-image img {
  max-width: 100%;
  height: auto;
}

.section-fullViewImage {
  width: 100%;
  padding-top: calc(var(--section-padding) * 0.5);
  padding-bottom: calc(var(--section-padding) * 0.5);
}
@media screen and (max-width: 1200px) {
  .section-fullViewImage {
    padding-top: calc(var(--section-padding) * 0.42);
    padding-bottom: calc(var(--section-padding) * 0.42);
  }
}
.section-fullViewImage-container {
  position: relative;
}
.section-fullViewImage-image {
  width: 100%;
  padding-bottom: min(60%, 90vh);
}

.section-titleParagraph {
  margin-top: calc(var(--section-padding) * 0.6);
  margin-bottom: calc(var(--section-padding) * 0.6);
  position: relative;
  z-index: 1;
}
.section-titleParagraph-wrapper {
  width: 80%;
  margin-left: auto;
  display: flex;
  gap: 126px;
  font-family: "Rebond Regular";
}
@media screen and (max-width: 540px) {
  .section-titleParagraph-wrapper {
    margin-left: 0;
    padding: 0;
    width: 100%;
    gap: 3.25rem;
  }
}
@media screen and (max-width: 540px) {
  .section-titleParagraph-title {
    font-size: 1rem;
  }
}
.section-titleParagraph-paragraph {
  font-size: clamp(1rem, 1.7 * var(--vw), 1.5rem);
  line-height: 1.875rem;
}
@media screen and (max-width: 540px) {
  .section-titleParagraph-paragraph {
    flex: 1;
    font-size: 1.125rem;
    line-height: 1.25;
  }
}

.section-bigSmallImages {
  display: flex;
  justify-content: space-between;
  margin: calc(9.75 * var(--vw)) 0 calc(9.75 * var(--vw)) 0;
}
@media screen and (max-width: 540px) {
  .section-bigSmallImages {
    margin: 1rem 0;
    flex-wrap: wrap;
    gap: 1rem;
  }
}
.section-bigSmallImages--is-bottom {
  align-items: flex-end;
}
.section-bigSmallImages-big-image {
  width: clamp(24rem, 40 * var(--vw), 48rem);
}
.section-bigSmallImages-small-image {
  width: clamp(24rem, 40 * var(--vw), 40rem);
}
.section-bigSmallImages .component-parallax-container {
  height: auto;
}

.section-approach-image {
  width: 100%;
}
.section-approach .section-titleParagraph {
  margin-bottom: 2rem;
}

.section-dualImages {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
  justify-content: center;
  margin: calc(9.75 * var(--vw)) 0 calc(9.75 * var(--vw)) 0;
}
@media screen and (max-width: 540px) {
  .section-dualImages {
    margin: 1rem 0;
    flex-wrap: wrap;
    gap: 1rem;
    flex-direction: column;
  }
}
.section-dualImages-first-image, .section-dualImages-second-image {
  width: 44%;
}
@media screen and (max-width: 540px) {
  .section-dualImages-first-image, .section-dualImages-second-image {
    width: 100%;
  }
}

.section-bigMainTitle {
  display: flex;
  justify-content: center;
  align-items: center;
  margin: calc(9.75 * var(--vw)) 0 calc(9.75 * var(--vw)) 0;
  min-height: 727px;
  padding: 0 calc(var(--section-padding) * 0.26);
}
@media screen and (max-width: 720px) {
  .section-bigMainTitle {
    min-height: 652px;
  }
}
@media screen and (max-width: 540px) {
  .section-bigMainTitle {
    min-height: 508px;
  }
}
.section-bigMainTitle-text {
  width: clamp(44rem, 72 * var(--vw), 66.25rem);
  font-size: 2rem;
  line-height: 1.2;
  text-align: center;
}
@media screen and (max-width: 540px) {
  .section-bigMainTitle-text {
    font-size: 1.125rem;
  }
}

.section-midImage {
  margin: calc(9.75 * var(--vw)) 0 calc(9.75 * var(--vw)) 0;
}
@media screen and (max-width: 540px) {
  .section-midImage {
    margin: 1rem 0;
  }
}
.section-midImage--reverse {
  display: flex;
  justify-content: flex-end;
}
.section-midImage-image {
  width: calc(75 * var(--vw));
}
@media screen and (max-width: 540px) {
  .section-midImage-image {
    width: 100%;
  }
}

.section-largeImage-image {
  position: relative;
  width: 100%;
}

.section-video-iframe {
  width: 100%;
  aspect-ratio: 16/9;
}
.section-video-iframe iframe {
  width: 100%;
  height: 100%;
  overscroll-behavior: contain;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/